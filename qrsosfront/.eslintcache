[{"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/index.js":"1","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/App.js":"2","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/reportWebVitals.js":"3","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/index.jsx":"4","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/components/Loader.jsx":"5","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/UserTopGrid.jsx":"6","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/ChronicPopUp.jsx":"7","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/queries/userDataQUery.jsx":"8","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/Allergies.jsx":"9","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/Routes/routers.jsx":"10","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/userMutator/index.jsx":"11","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/components/Mutator.jsx":"12","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/queries/userEditionQuery.jsx":"13","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/navbar/index.jsx":"14","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/home/index.jsx":"15","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/Login/index.jsx":"16","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/Auth/index.jsx":"17","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/Routes/publicRoutes.jsx":"18","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/createUser/index.jsx":"19"},{"size":318,"mtime":1610925555180,"results":"20","hashOfConfig":"21"},{"size":1590,"mtime":1610927674233,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1609022045827,"results":"23","hashOfConfig":"21"},{"size":1157,"mtime":1610926490209,"results":"24","hashOfConfig":"21"},{"size":724,"mtime":1609022045817,"results":"25","hashOfConfig":"21"},{"size":1291,"mtime":1610930812238,"results":"26","hashOfConfig":"21"},{"size":1953,"mtime":1609447541222,"results":"27","hashOfConfig":"21"},{"size":359,"mtime":1610926484114,"results":"28","hashOfConfig":"21"},{"size":1886,"mtime":1610925017176,"results":"29","hashOfConfig":"21"},{"size":1104,"mtime":1610927625201,"results":"30","hashOfConfig":"21"},{"size":6933,"mtime":1610926469175,"results":"31","hashOfConfig":"21"},{"size":241,"mtime":1609022045818,"results":"32","hashOfConfig":"21"},{"size":748,"mtime":1610920853188,"results":"33","hashOfConfig":"21"},{"size":3226,"mtime":1610926910302,"results":"34","hashOfConfig":"21"},{"size":476,"mtime":1610926476188,"results":"35","hashOfConfig":"21"},{"size":2402,"mtime":1610929365773,"results":"36","hashOfConfig":"21"},{"size":147,"mtime":1610924213839,"results":"37","hashOfConfig":"21"},{"size":654,"mtime":1610929101157,"results":"38","hashOfConfig":"21"},{"size":72,"mtime":1610929069275,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"129rss7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/index.js",[],["86","87"],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/App.js",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/reportWebVitals.js",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/index.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/components/Loader.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/UserTopGrid.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/ChronicPopUp.jsx",["88","89","90"],"import Loader from \"../../components/Loader\"\nimport {ListItem, ListItemText, Collapse, List , Dialog, Button} from '@material-ui/core';\nimport { useState } from \"react\";\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\n\nfunction ChronicPopUp(props) {\n    const {user} = props\n    const initialStates = {}\n    user.chronicDisease.map(item=> initialStates[item.id] = false )\n    const [isOpen, setOpen] = useState(false)\n    const [expand, setExpand] = useState(false)\n    const [selected, setSelected] = useState(initialStates)\n\n    const handleOpen = (e) =>{\n        setOpen(true)\n    }\n\n    const handleClose = (e) => {\n        setOpen(false)\n        setSelected(initialStates)\n    }\n\n    const handleClick = (id) => {\n        setSelected({...selected, [id]:!selected[id]})\n    }\n\n    return (\n        <div>\n            <Button color=\"default\" variant=\"contained\" style={{width:\"100%\"}} onClick={handleOpen}>Enfermedades Cronicas</Button>\n            <Dialog style={{height:\"100%\",width:\"100%\"}} onClose={handleClose} open={isOpen}>\n                <List>\n                    {user.chronicDisease.map(item=>\n                    <>\n                        <ListItem button onClick={()=>handleClick(item.id)}>\n                        <ListItemText primary={item.name} />\n                            {selected[item.id] ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                        <Collapse in={selected[item.id]} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem>\n                                {`Medicacion: ${item.medication}`}\n                            </ListItem>\n                        </List>\n                    </Collapse>        \n                    </>)}\n\n                </List>\n        \n            </Dialog>\n        </div>\n  );\n}\n\nexport default ChronicPopUp;\n",["91","92"],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/queries/userDataQUery.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/Allergies.jsx",["93","94"],"import {ListItem, ListItemText, Collapse, List , Dialog, Button} from '@material-ui/core';\nimport { useState } from \"react\";\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\n\nfunction AllergiesPopUp(props) {\n    const {user} = props\n    const initialStates = {}\n    user.allergy.map(item=> initialStates[item.id] = false)\n    const [isOpen, setOpen] = useState(false)\n    const [expand, setExpand] = useState(false)\n    const [selected, setSelected] = useState(initialStates)\n\n    const handleOpen = (e) =>{\n        setOpen(true)\n    }\n\n    const handleClose = (e) => {\n        setOpen(false)\n        setSelected(initialStates)\n    }\n\n    const handleClick = (id) => {\n        setSelected({...selected, [id]:!selected[id]})\n    }\n\n    return (\n        <div>\n            <Button color=\"default\" variant=\"contained\" style={{width:\"100%\"}} onClick={handleOpen}>Alergias</Button>\n            <Dialog style={{height:\"100%\",width:\"100%\"}} onClose={handleClose} open={isOpen}>\n                <List>\n                    {user.allergy.map(item=>\n                    <>\n                        <ListItem button onClick={()=>handleClick(item.id)}>\n                        <ListItemText primary={item.name} />\n                            {selected[item.id] ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                        <Collapse in={selected[item.id]} timeout=\"auto\" unmountOnExit>\n\n                        <List component=\"div\" disablePadding>\n                            <ListItem>\n                                {`Medication: ${item.medication}`}\n                            </ListItem>\n                        </List>\n\n                    </Collapse>        \n                    </>)}\n\n                </List>\n        \n            </Dialog>\n        </div>\n  );\n}\n\nexport default AllergiesPopUp;\n","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/Routes/routers.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/userMutator/index.jsx",["95","96","97"],"import { TextField, Button, Typography, Divider, Grid, InputAdornment, Card, IconButton, Fade, Select, FormControl, InputLabel, MenuItem   } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useState } from 'react';\nimport Loader from \"../../components/Loader\"\nimport {USER_QUERY} from \"../../containers/User/queries/userDataQUery\"\nimport {USER_EDITION} from \"../../containers/User/queries/userEditionQuery\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { useMutation } from '@apollo/client';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction CustomInput(props){\n\n    return(\n        <TextField\n        style={{margin:\"2%\"}}\n        onChange={ e => props.onChange(e)}\n        label={props.label}\n        defaultValue={props.defaultValue}\n        InputProps={{\n        endAdornment: (\n            <InputAdornment position=\"end\">\n            <DoneIcon color={props.state ? \"primary\" : \"dafault\"} />\n            </InputAdornment>\n        ),}}/>      \n    )\n}\n\n\nfunction CustomSelect(props){\n    const {selected, options, onChange, label} = props\n    const handleChange = (e) => {\n        const value = options[e.target.value]\n        onChange({currentTarget:{value:value}})\n    }\n     return(\n        <FormControl style={{width:200}}>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          value={options.findIndex((i)=> i == selected)}\n          onChange={handleChange}\n        >\n            {options.map(item=> \n                <MenuItem value={options.findIndex((i)=> i == item)}>{item}</MenuItem>  \n            )}\n        </Select>\n      </FormControl>\n     )\n}\n\n\n\n\nfunction UserEditor(props){\n    return (\n        <Loader query={USER_QUERY}>\n            {data =>\n            <UserMutator user={data.user}/>}\n        </Loader>\n    )\n\n}\n\nconst bloodTransformer = {\n    A_ : \"A+\",\n    A__1 : \"A-\",\n    B_ :  \"B+\",\n    B__3 : \"B-\",\n    A_0_ : \"0+\",\n    A_0__5 : \"0-\",\n    AB_ :\"AB+\",\n    AB__7:\"AB-\",\n}\n\nfunction UserMutator(props){  \n    const [handleMutate, { data }] = useMutation(USER_EDITION);\n    const [variables,setVariables] = useState({id:\"1\",\n                                               firstName:props.user.firstName,\n                                               lastName:props.user.lastName,\n                                               dni:props.user.dni,\n                                               prepaidHealth:props.user.prepaidHealth,\n                                               emergencyNumber:props.user.emergencyNumber,\n                                               prepaidId:props.user.prepaidId,\n                                               bloodType:bloodTransformer[props.user.bloodType]})\n\n\n    const [alert, setAlert] = useState({severity:null,message:\"\"})\n\n    const handleChange = (e, variable) => {\n        console.log(e.currentTarget)\n        setVariables({...variables, [variable]:e.currentTarget.value})\n    }\n\n    const handleAlert = () => {\n        setAlert({severity:\"success\", message:\"se modifico tu perfil correctamente\"})\n        setTimeout(function(){ setAlert({severity:null,message:\"\"}); }, 3000);\n    }\n\n    const handleSave = () => {\n        handleMutate({variables:variables})\n        .then(()=>handleAlert())\n        .catch(e=>console.log(e))\n    }\n\n    const bloodTypeOptions = Object.keys(bloodTransformer).map(k => bloodTransformer[k])\n\n    return(\n        <div style={{margin:\"10%\"}}>\n            <center><Typography variant=\"h5\">Editar Perfil</Typography></center>\n            <Divider />\n            {/* First Line */}\n            <Grid  container style={{margin:\"2%\"}}>\n                <Grid style={{margin:\"2%\"}} item xs={3}>\n                    <Card style={{backgroundColor:\"#d4d0c5\", height:200,width:160}}>\n                        <IconButton style={{color:\"white\"}}><AddAPhotoIcon /></IconButton>\n                    </Card>\n                </Grid>\n                <Grid style={{margin:\"2%\"}} container xs={5}>\n                    <Grid item xs={6}>\n                    <CustomInput\n                        onChange={ e => handleChange(e, \"firstName\")}\n                        label=\"Nombre\"\n                        defaultValue={props.user.firstName}\n                        state={variables.firstName}/>                \n                    </Grid>\n                    <Grid  item xs={6}>\n                    <CustomInput\n                        onChange={e => handleChange(e,\"lastName\")}\n                        label=\"Apellido\"\n                        defaultValue={props.user.lastName}\n                        state={variables.lastName}/>                \n                    </Grid>\n                    <Grid  item xs={6}>\n                    <CustomInput\n                        onChange={e => handleChange(e,\"dni\")}\n                        label=\"DNI\"\n                        defaultValue={props.user.dni}\n                        state={variables.dni}/>                \n                    </Grid>\n                    <Grid  item xs={6}>\n                    <CustomInput\n                        onChange={e => handleChange(e, \"emergencyNumber\")}\n                        label=\"Numero de Emergencia\"\n                        defaultValue={props.user.emergencyNumber}\n                        state={variables.emergencyNumber}/>    \n              \n                    </Grid>\n                </Grid>\n                {/* Second line */}\n                <Grid style={{margin:\"2%\"}} xs={3}>\n                    <CustomInput\n                            onChange={e => handleChange(e, \"prepaidHealth\")}\n                            label=\"Obra Social\"\n                            defaultValue={props.user.prepaidHealth}\n                            state={variables.prepaidHealth}/>           \n                </Grid>\n\n                <Grid style={{margin:\"2%\"}} xs={3}>\n                        <CustomInput\n                        onChange={e => handleChange(e, \"prepaidId\")}\n                        label=\"Numero de afiliado\"\n                        defaultValue={props.user.prepaidId}\n                        state={variables.prepaidId}/>                \n                </Grid>\n                <Grid style={{margin:\"2%\"}} xs={3}>\n                        <CustomSelect\n                        onChange={e => handleChange(e, \"bloodType\")}\n                        label=\"Tipo de sangre\"\n                        selected={variables.bloodType}\n                        options={bloodTypeOptions}/>                \n                </Grid>\n\n            </Grid>\n            <Button color=\"primary\" variant=\"contained\" style={{position:\"absolute\", bottom:40, right:30}} onClick={handleSave}>guardar</Button>\n\n        {alert.severity ? \n            <Fade in={alert.severity}>\n                <Alert variant=\"filled\" style={{position:\"absolute\", bottom:30, left:30}} severity={alert.severity}>{alert.message}</Alert>\n            </Fade>\n         : null}\n        </div>\n    )\n}\n\nexport default UserEditor","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/components/Mutator.jsx",[],["98","99"],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/containers/User/queries/userEditionQuery.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/navbar/index.jsx",["100"],"import {Drawer, AppBar , List, ListItem, ListItemIcon, IconButton, Toolbar, Divider  } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useAuth} from \"../../Auth/index\" \r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    background: '#e8dec5',\r\n  }\r\n});\r\n\r\n\r\nexport default function Navbar(props){\r\n    const [isDrawerOpen, setDrawerState] = useState(false)\r\n    const history = useHistory();\r\n    const styles = useStyles();\r\n    const {logout} = useAuth()\r\n\r\n\r\n    const routeChange = (path) =>{  \r\n        history.push(path);\r\n    }\r\n\r\n    const handleOpenDrawer = e => {\r\n        setDrawerState(true)\r\n    }\r\n\r\n    const handleClose = e =>{\r\n        setDrawerState(false)\r\n    }\r\n\r\n    return(\r\n        <div style={{width:\"100%\"}}>\r\n        <AppBar style={{backgroundColor:\"#b3a584\"}}>\r\n            <Toolbar>\r\n            <IconButton edge=\"start\" style={{color:\"white\"}} onClick={handleOpenDrawer}>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n\r\n        </AppBar>        \r\n\r\n        \r\n        <Drawer classes={{ paper: styles.paper }}  anchor=\"left\" open={isDrawerOpen} onClose={handleClose}>\r\n                    <List>\r\n                    <ListItem button onClick={()=>routeChange(\"home\")}>\r\n                            <ListItemIcon>\r\n                                <HomeIcon />\r\n                            </ListItemIcon>\r\n                            Home\r\n                    </ListItem>\r\n                        <ListItem button onClick={()=>routeChange(\"profile\")}>\r\n                            <ListItemIcon>\r\n                                <AccountCircleIcon />\r\n                            </ListItemIcon>\r\n                            Perfil\r\n                        </ListItem>\r\n                        <ListItem button onClick={()=>routeChange(\"edit\")}>\r\n                            <ListItemIcon>\r\n                                <EditIcon />\r\n                            </ListItemIcon>\r\n                            Editar Perfil\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <BackupIcon />\r\n                            </ListItemIcon>\r\n                            Cargar Archivos\r\n                        </ListItem>\r\n\r\n\r\n                    </List>\r\n                    <List style={{position:\"absolute\", bottom:5}}>\r\n                        <ListItem button onClick={logout}>\r\n                                <ListItemIcon>\r\n                                    <ExitToAppIcon />\r\n                                </ListItemIcon>\r\n                                Cerrar Sesión\r\n                            </ListItem>\r\n\r\n                    </List>\r\n                </Drawer>\r\n        </div>\r\n\r\n    )\r\n}","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/home/index.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/Login/index.jsx",["101","102","103","104","105"],"import React, { useState, createContext, useContext } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {TextField, Button, Card} from \"@material-ui/core\"\nimport Alert from '@material-ui/lab/Alert';\nimport {useAuth} from \"../../Auth/index\" \n\nconst LOGIN = gql`\n    mutation user_auth($input: ObtainJSONWebTokenInput!) {\n        tokenAuth(input: $input) {\n            token\n        }\n    }\n`\n\nconst Login = () => {\n    const { user, authenticate } = useAuth()\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [alert, setAlert] = useState({severity:null,message:\"\"})\n\n    const [login, {loading, error}] = useMutation(LOGIN)\n\n    const handleAlert = (error) => {\n        setAlert({severity:\"error\", message:error})\n        setTimeout(function(){ setAlert({severity:null,message:\"\"}); }, 3000);\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        login({\n            variables: {\n                input: {\n                    username: userName,\n                    password: password\n                }\n            }\n        })\n        .then(res => {\n            const authToken = res.data.tokenAuth.token\n            authenticate(authToken)\n        })\n        .catch(err => {handleAlert(err.message)})\n    }\n\n    return (\n        <div style={{marginTop:\"20%\"}}>\n            <center>\n                <Card style={{width:\"30%\"}}>\n                    <div style={{margin:\"5%\"}}>\n                        <TextField variant=\"outlined\" label=\"Nombre de usuario\" onChange={ e=> setUserName(e.currentTarget.value)} />\n                    </div>\n                    <div style={{margin:\"5%\"}}>\n                        <TextField variant=\"outlined\" type=\"password\" label=\"contraseña\" onChange={ e=> setPassword(e.currentTarget.value)} />\n                    </div>\n                    <div  style={{margin:\"5%\"}}>\n                        <Button style={{width:\"100%\"}} color=\"primary\" variant=\"contained\" onClick={handleSubmit}> Ingresar </Button>\n                    </div>\n                    <a href=\"/create\" style={{float:\"left\", margin:\"2%\"}}>Crear Cuenta</a>\n\n                </Card>\n            </center>\n\n            {alert.severity ? <Alert style={{position:\"absolute\",left:30,bottom:15}} severity={alert.severity}>{alert.message}</Alert>: null}\n        </div>\n\n    )\n}\n\nexport default Login","/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/Auth/index.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/Routes/publicRoutes.jsx",[],"/mnt/c/Users/Santiago Duperron/qrsos/healthybans/qrsosfront/src/pages/createUser/index.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":13,"column":12,"nodeType":"112","messageId":"113","endLine":13,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":13,"column":20,"nodeType":"112","messageId":"113","endLine":13,"endColumn":29},{"ruleId":"106","replacedBy":"116"},{"ruleId":"108","replacedBy":"117"},{"ruleId":"110","severity":1,"message":"114","line":12,"column":12,"nodeType":"112","messageId":"113","endLine":12,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":12,"column":20,"nodeType":"112","messageId":"113","endLine":12,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":39,"column":44,"nodeType":"120","messageId":"121","endLine":39,"endColumn":46},{"ruleId":"118","severity":1,"message":"119","line":43,"column":60,"nodeType":"120","messageId":"121","endLine":43,"endColumn":62},{"ruleId":"110","severity":1,"message":"122","line":75,"column":28,"nodeType":"112","messageId":"113","endLine":75,"endColumn":32},{"ruleId":"106","replacedBy":"123"},{"ruleId":"108","replacedBy":"124"},{"ruleId":"110","severity":1,"message":"125","line":1,"column":77,"nodeType":"112","messageId":"113","endLine":1,"endColumn":84},{"ruleId":"110","severity":1,"message":"126","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":40},{"ruleId":"110","severity":1,"message":"127","line":1,"column":42,"nodeType":"112","messageId":"113","endLine":1,"endColumn":52},{"ruleId":"110","severity":1,"message":"128","line":16,"column":13,"nodeType":"112","messageId":"113","endLine":16,"endColumn":17},{"ruleId":"110","severity":1,"message":"129","line":21,"column":20,"nodeType":"112","messageId":"113","endLine":21,"endColumn":27},{"ruleId":"110","severity":1,"message":"130","line":21,"column":29,"nodeType":"112","messageId":"113","endLine":21,"endColumn":34},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'expand' is assigned a value but never used.","'setExpand' is assigned a value but never used.",["131"],["132"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.",["131"],["132"],"'Divider' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'user' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]